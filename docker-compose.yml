version: '3.8'

services:
    # 1. 백엔드 API 서버 서비스
    product_app:
        build: .
        container_name: product_app_service
        # API 서버 포트(8080)는 외부로 노출할 필요가 없습니다.
        # Docker 네트워크 내부에서만 통신합니다.
        command: ["python", "product_app.py"] # product_app.py를 직접 실행
        env_file:
            - .env
        volumes:
            - ./data:/app/data
            - ./logs:/app/logs
            - ./config:/app/config
        environment:
            - UPBIT_ACCESS_KEY
            - UPBIT_SECRET_KEY
            - TZ=Asia/Seoul
        networks:
            - crypto-network
        deploy:
            resources:
                limits:
                    memory: 256M
                    cpus: "0.25"
                reservations:
                    memory: 128M
                    cpus: "0.1"

    # 2. 스트림릿 대시보드 서비스
    dashboard:
        build: .
        container_name: dashboard_service
        # 대시보드 포트(8501)는 외부 접속을 위해 노출합니다.
        ports:
            - "8501:8501"
        # API 서버(product_app)에 의존하도록 설정
        depends_on:
            - product_app
        command: ["streamlit", "run", "streamlit_dashboard.py", "--server.port=8501", "--server.address=0.0.0.0"]
        env_file:
            - .env
        volumes:
            - ./data:/app/data
            - ./logs:/app/logs
            - ./config:/app/config
        environment:
            - UPBIT_ACCESS_KEY
            - UPBIT_SECRET_KEY
            - TZ=Asia/Seoul
        networks:
            - crypto-network
        deploy:
            resources:
                limits:
                    memory: 256M
                    cpus: "0.25"
                reservations:
                    memory: 128M
                    cpus: "0.15"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

networks:
    crypto-network:
        driver: bridge

volumes:
    crypto-data:
        driver: local
    crypto-logs:
        driver: local
